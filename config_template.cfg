######################################################################
# This file contains configurations that depend on your system
#
# This is just a template that isn't used during compilation.
# Rename this file to "config.cfg" and do any necessary modifications.
#
# The content of the file is just Python code that has to set a few
# predefined variables that are used by the setup script to compile
# the package.
#
# Common variables:
#
# - INC_DIRS:  This is a list of additional directories that should be
#              searched for header files.
# - LIB_DIRS:  This is a list of additional directories that should be
#              searched for libraries.
# - LIBS:      This list contains the libraries that should be used
#              during linking.
# - MACROS:    This list contains 2-tuples (<name>, <value>) that define
#              preprocessor macros which should be set. <value> can be
#              None if you only want to define the symbol. Example:
#              MACROS += [("GCC_3_1", None)]
# - BOOST_LIB: This is the name of the Boost.Python library to link with
#              (default: "boost_python")
#
# Note: Always *add* items to one of the lists instead of replacing
# the entire list.
######################################################################

######################################################################
# Do you want to install the 'light' version of cgkit? Then uncomment
# the following line. In this case, all other configuration settings 
# have no effect anymore and can be ignored. 
# The light version will only install pure Python modules, so no
# C/C++ compiler is required.
######################################################################

#INSTALL_CGKIT_LIGHT = True


######################################################################
# Boost.Python settings
######################################################################

# Name of the Boost.Python library to link with
#BOOST_LIB = "boost_python"

# Name of the Boost.Python runtime dll (only relevant on Windows)
#BOOST_DLL = "boost_python.dll"

######################################################################
# Additional libraries
######################################################################

#LIBS += []

######################################################################
# STLport settings
######################################################################

# Is STLport used or not (only relevant on Windows)
# If it is used, the STLport DLL will be copied into the cgkit directory
#USING_STLPORT = True

# Base path where STLport can be found (only relevant on Windows)
#STLPORT_BASE = r"C:\Programme\Programmieren\STLport-4.6.2"

# Name of the STLport runtime dll (only relevant on Windows)
# (this can also contain an absolute path to the dll in which case
# the STLPORT_BASE variable is ignored when copying the dll)
#STLPORT_DLL = "stlport_vc646.dll"

######################################################################
# Optional libraries
######################################################################

####### Libd3DS #######

#LIB3DS_AVAILABLE = True
#LIB3DS_PATH = r"C:\Programme\Programmieren\lib3ds-1.2.0"
#LIB3DS_LIBNAME = "lib3ds-120s"

####### CyberX3D #######

#CYBERX3D_AVAILABLE = True
#CYBERX3D_PATH = r""
#XERCES_PATH = r""

####### Ogre3D #######

#OGRE_AVAILABLE = False
#INC_DIRS += []
#LIB_DIRS += []

####### 3DXWare SpaceMouse/SpaceBall SDK #######

#THREEDXWARE_AVAILABLE = True
#INC_DIRS += []
#LIB_DIRS += []
#LIBS += ["siapp"]

####### Wintab #######

#WINTAB_AVAILABLE = True
#INC_DIRS += []
#LIB_DIRS += []
#LIBS += ["wintab32"]

####### Data Glove #######

# The variable GLOVESDK_DLL must contain the name of the glove dll. 
# It can either be the full path or filename only in which case it's 
# assumed to be located in GLOVESDK_BASE\dll.

#GLOVESDK_AVAILABLE = True
#GLOVESDK_BASE = ""
#GLOVESDK_DLL = "fglove.dll"
#INC_DIRS += []
#LIB_DIRS += []
#LIBS += ["fglove"]
